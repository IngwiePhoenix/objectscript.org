<p>
Все, что находится вне пары открывающего и закрывающего тегов, игнорируется OS, у которого есть возможность 
обрабатывать файлы со смешанным содержимым. Это позволяет OS-коду быть встроенным в документы HTML, к примеру, для создания шаблонов.

<div class="row">
  <div class="col-md-10">
<pre class="prettyprint linenums lang-html"><% @controller.beginWidget("HtmlEncodeWidget") %>
<p>Это будет проигнорировано ObjectScript и отображено браузером.</p>
&lt;% echo 'А это будет обработано.'; %&gt; 
<p>Это тоже будет проигнорировано ObjectScript и отображено браузером.</p>
<% @controller.endWidget("HtmlEncodeWidget") %></pre>
  </div>
</div>

<p>
Это работает так, как и ожидается, потому что когда ObjectScript встречает закрывающий тег <code>%&gt;</code>, 
он просто начинает выводить все что найдет пока не встретит другой открывающий тег <code>&lt;%</code>.

<h3>Продвинутое изолирование с использованием условий</h3>

<div class="row">
  <div class="col-md-10">
<pre class="prettyprint linenums lang-html"><% @controller.beginWidget("HtmlEncodeWidget") %>
&lt;% if(expression){ %&gt; 
  Это будет отображено, если выражение истинно.
&lt;% }else{ %&gt; 
  В ином случае будет отображено это.
&lt;% } /* if */ %&gt; 
<% @controller.endWidget("HtmlEncodeWidget") %></pre>
  </div>
</div>

<p>
В этом примере ObjectScript пропускает блоки, где условие не соблюдается. Даже несмотря на то, что они находятся вне пары 
открывающих/закрывающих тегов, ObjectScript пропустит их в соответствии с условием, так как будет перепрыгивать через блоки, 
содержащиеся внутри условия, которое не соблюдается.
