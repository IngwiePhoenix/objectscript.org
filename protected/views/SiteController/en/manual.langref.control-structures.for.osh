<p>
Цикл <code>for</code> ведет себя так же как его аналог в языке C++. Синтаксис цикла <code>for</code> следующий:

<div class="row">
  <div class="col-md-10">
<pre class="prettyprint linenums lang-js">

for (expr1; expr2; expr3)
    statement

</pre>
  </div>
</div>

<p>
Первое выражение <code>expr1</code> всегда вычисляется (выполняется) только один раз в начале цикла.

<p>
В начале каждой итерации оценивается выражение <code>expr2</code>. Если оно принимает значение <code>true</code>, 
то цикл продолжается, и вложенные операторы будут выполнены. Если оно принимает 
значение <code>false</code>, выполнение цикла заканчивается.

<p>
В конце каждой итерации выражение <code>expr3</code> вычисляется (выполняется).

<p>
Каждое из выражений может быть пустым или содержать одно выражение. Если выражение 
<code>expr2</code> отсутствует, это означает, что цикл будет выполняться 
бесконечно (ObjectScript неявно воспринимает это значение как <code>true</code>, также, как в языке C++). 
Это может быть не столь бесполезно, сколь вы могли подумать, так как часто необходимо 
прервать цикл, используя условный оператор <code>break</code> вместо использования выражения в цикле 
<code>for</code>, которое принимает истинное значение.

<%@controller.widget{'SourceWidget', source="examples/tutorial.control-structures.for.osh"}%>

<h3>for in</h3>

<p>
Цикл <code>for in</code> в ObjectScript предназначен для обхода (итерации) по коллекции. Он имеет следующий синтаксис:

<div class="row">
  <div class="col-md-10">
<pre class="prettyprint linenums lang-js">

for (i in collection)
    statement

for (i, v in collection)
    statement

</pre>
  </div>
</div>

<p>
Где <code>i</code> - ключ элемента коллекции, <code>v</code> - значение элемента коллекции, <code>collection</code> - сама коллекция.

<div class="alert alert-info">
См. <a href="<%=@controller.createUrl{params={page="langref.oop.iterations"}, amp="&amp;"}%>">Итераторы объектов</a>
</div>
