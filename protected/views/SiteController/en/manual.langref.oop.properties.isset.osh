<p>
Зачастую в программе появляется необходимость проверить, есть ли у данного объекта определенное свойство. 
Такую задачу можно решить просто прочитав нужное свойство, например, <code>a.username</code>. Если результат
будет <code>null</code>, то видимо свойство не существует или не задано. А что если запрашиваемое свойство
не существует, а в коде объекта реализовано исключение при доступе к несуществующему свойству. Например вот так:

<%@controller.widget{'SourceWidget', source="examples/tutorial.oop.properties.isset-exception.osh"}%>

<p>
В этом случае описанный выше способ (через чтение свойства) не подойдет. 

<p>
В ObjectScript данная задача решается с использованием оператора <code>in</code> в конструкции <code>"username" in a</code>.
В этом случае ObjectScript делает следующие проверки:

<ol>
<li><p>Проверяет, существует ли запрашиваемое свойство в объекте или в одном из его родителей (прототипов). 
Если да, то возвращает <code>true</code>, если нет, то переходит к следующему пункту.
<li><p>Проверяет, существует ли метод <code>__isset@prop</code> в объекте или в одном из его родителей (прототипов),
где <code>prop</code> - имя запрашиваемого свойства.
Если да, то вызывает данный метод и возвращает его результат в булевом типе. Если метод не существует, 
то переходит к следующему пункту.
<li><p>Проверяет, существует ли метод <code>__get@prop</code> в объекте или в одном из его родителей (прототипов),
где <code>prop</code> - имя запрашиваемого свойства.
Если да, то возвращает <code>true</code>. Если метод не существует, 
то переходит к следующему пункту.
<li><p>Проверяет, существует ли метод <code>__isset</code> в объекте или в одном из его родителей (прототипов).
Если да, то вызывает данный метод с одним параметром (имя запрашиваемого свойства) и возвращает его результат в булевом типе. 
Если метод не существует, то возвращает <code>false</code>.
</ol>

<%@controller.widget{'SourceWidget', source="examples/tutorial.oop.properties.isset.osh"}%>
